{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.includes\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.promise\");\n\nrequire(\"core-js/modules/es.string.includes\");\n\nrequire(\"core-js/modules/es.string.starts-with\");\n\nrequire(\"core-js/modules/web.url.to-json\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toDSV = toDSV;\nexports.toCSV = toCSV;\nexports.toTSV = toTSV;\nexports.toPSV = toPSV;\nexports.toText = toText;\nexports.toJSON = toJSON;\nexports.fromDSV = fromDSV;\nexports.fromCSV = fromCSV;\nexports.fromTSV = fromTSV;\nexports.fromPSV = fromPSV;\nexports.fromText = fromText;\nexports.fromJSON = fromJSON;\n\nvar _d3Request = require(\"d3-request\");\n\nvar _d3Dsv = require(\"d3-dsv\");\n\nvar _symbol = require(\"./symbol\");\n\nvar _errors = require(\"./errors\");\n\nfunction saveFile(path, content) {\n  try {\n    require(\"fs\").writeFileSync(path, content);\n  } catch (e) {\n    console.warn(\"File system module is not available.\");\n  }\n}\n\nfunction loadTextFile(file, func) {\n  if (FileReader && File) {\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      return func(event.target.result);\n    };\n\n    reader.readAsText(file);\n  }\n}\n\nfunction addFileProtocol(path) {\n  return path.startsWith(\"/\") || path.startsWith(\"./\") || path.startsWith(\"C\") ? \"file://\".concat(path) : path;\n}\n\nfunction toDSV(df) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var parser = (0, _d3Dsv.dsvFormat)(sep);\n  var csvContent = header ? parser.format(df.toCollection(), df[_symbol.__columns__]) : parser.formatRows(df.toArray());\n\n  if (path) {\n    saveFile(df._cleanSavePath(path), csvContent);\n  }\n\n  return csvContent;\n}\n\nfunction toText(df) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  return df.toDSV(sep, header, path);\n}\n\nfunction toCSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\",\", header, path);\n}\n\nfunction toTSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\"\\t\", header, path);\n}\n\nfunction toPSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\"|\", header, path);\n}\n\nfunction toJSON(df) {\n  var asCollection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var jsonContent = JSON.stringify(asCollection ? df.toCollection() : df.toDict());\n\n  if (path) {\n    saveFile(df._cleanSavePath(path), jsonContent);\n  }\n\n  return jsonContent;\n}\n\nfunction fromDSV(pathOrFile) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var parser = (0, _d3Dsv.dsvFormat)(sep);\n  return new Promise(function (resolve) {\n    var parseText = function parseText(fileContent) {\n      if (fileContent.includes(\"Error: ENOENT\")) return resolve(null);\n      var data = header ? parser.parse(fileContent) : parser.parseRows(fileContent);\n      return resolve(data);\n    };\n\n    return typeof pathOrFile === \"string\" ? (0, _d3Request.text)(addFileProtocol(pathOrFile), parseText) : loadTextFile(pathOrFile, parseText);\n  }).then(function (fileContent) {\n    if (fileContent === null) {\n      throw new _errors.FileNotFoundError(pathOrFile);\n    }\n\n    return fileContent;\n  });\n}\n\nfunction fromText(pathOrFile) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return fromDSV(pathOrFile, sep, header);\n}\n\nfunction fromCSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \",\", header);\n}\n\nfunction fromTSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \"\\t\", header);\n}\n\nfunction fromPSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \"|\", header);\n}\n\nfunction fromJSON(pathOrFile) {\n  return new Promise(function (resolve) {\n    return typeof pathOrFile === \"string\" ? (0, _d3Request.json)(addFileProtocol(pathOrFile), resolve) : loadTextFile(pathOrFile, function (txt) {\n      return resolve(JSON.parse(txt));\n    });\n  }).then(function (fileContent) {\n    if (fileContent === null) {\n      throw new _errors.FileNotFoundError(pathOrFile);\n    }\n\n    return fileContent;\n  });\n}","map":{"version":3,"sources":["/Users/gabe/mggg/estimate-incoming/node_modules/dataframe-js/lib/io.js"],"names":["require","Object","defineProperty","exports","value","toDSV","toCSV","toTSV","toPSV","toText","toJSON","fromDSV","fromCSV","fromTSV","fromPSV","fromText","fromJSON","_d3Request","_d3Dsv","_symbol","_errors","saveFile","path","content","writeFileSync","e","console","warn","loadTextFile","file","func","FileReader","File","reader","onload","event","target","result","readAsText","addFileProtocol","startsWith","concat","df","sep","arguments","length","undefined","header","parser","dsvFormat","csvContent","format","toCollection","__columns__","formatRows","toArray","_cleanSavePath","asCollection","jsonContent","JSON","stringify","toDict","pathOrFile","Promise","resolve","parseText","fileContent","includes","data","parse","parseRows","text","then","FileNotFoundError","json","txt"],"mappings":"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","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.array.includes\");\n\nrequire(\"core-js/modules/es.date.to-json\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.promise\");\n\nrequire(\"core-js/modules/es.string.includes\");\n\nrequire(\"core-js/modules/es.string.starts-with\");\n\nrequire(\"core-js/modules/web.url.to-json\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toDSV = toDSV;\nexports.toCSV = toCSV;\nexports.toTSV = toTSV;\nexports.toPSV = toPSV;\nexports.toText = toText;\nexports.toJSON = toJSON;\nexports.fromDSV = fromDSV;\nexports.fromCSV = fromCSV;\nexports.fromTSV = fromTSV;\nexports.fromPSV = fromPSV;\nexports.fromText = fromText;\nexports.fromJSON = fromJSON;\n\nvar _d3Request = require(\"d3-request\");\n\nvar _d3Dsv = require(\"d3-dsv\");\n\nvar _symbol = require(\"./symbol\");\n\nvar _errors = require(\"./errors\");\n\nfunction saveFile(path, content) {\n  try {\n    require(\"fs\").writeFileSync(path, content);\n  } catch (e) {\n    console.warn(\"File system module is not available.\");\n  }\n}\n\nfunction loadTextFile(file, func) {\n  if (FileReader && File) {\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      return func(event.target.result);\n    };\n\n    reader.readAsText(file);\n  }\n}\n\nfunction addFileProtocol(path) {\n  return path.startsWith(\"/\") || path.startsWith(\"./\") || path.startsWith(\"C\") ? \"file://\".concat(path) : path;\n}\n\nfunction toDSV(df) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var parser = (0, _d3Dsv.dsvFormat)(sep);\n  var csvContent = header ? parser.format(df.toCollection(), df[_symbol.__columns__]) : parser.formatRows(df.toArray());\n\n  if (path) {\n    saveFile(df._cleanSavePath(path), csvContent);\n  }\n\n  return csvContent;\n}\n\nfunction toText(df) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  return df.toDSV(sep, header, path);\n}\n\nfunction toCSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\",\", header, path);\n}\n\nfunction toTSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\"\\t\", header, path);\n}\n\nfunction toPSV(df) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  return df.toDSV(\"|\", header, path);\n}\n\nfunction toJSON(df) {\n  var asCollection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var jsonContent = JSON.stringify(asCollection ? df.toCollection() : df.toDict());\n\n  if (path) {\n    saveFile(df._cleanSavePath(path), jsonContent);\n  }\n\n  return jsonContent;\n}\n\nfunction fromDSV(pathOrFile) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var parser = (0, _d3Dsv.dsvFormat)(sep);\n  return new Promise(function (resolve) {\n    var parseText = function parseText(fileContent) {\n      if (fileContent.includes(\"Error: ENOENT\")) return resolve(null);\n      var data = header ? parser.parse(fileContent) : parser.parseRows(fileContent);\n      return resolve(data);\n    };\n\n    return typeof pathOrFile === \"string\" ? (0, _d3Request.text)(addFileProtocol(pathOrFile), parseText) : loadTextFile(pathOrFile, parseText);\n  }).then(function (fileContent) {\n    if (fileContent === null) {\n      throw new _errors.FileNotFoundError(pathOrFile);\n    }\n\n    return fileContent;\n  });\n}\n\nfunction fromText(pathOrFile) {\n  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \";\";\n  var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return fromDSV(pathOrFile, sep, header);\n}\n\nfunction fromCSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \",\", header);\n}\n\nfunction fromTSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \"\\t\", header);\n}\n\nfunction fromPSV(pathOrFile) {\n  var header = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return fromDSV(pathOrFile, \"|\", header);\n}\n\nfunction fromJSON(pathOrFile) {\n  return new Promise(function (resolve) {\n    return typeof pathOrFile === \"string\" ? (0, _d3Request.json)(addFileProtocol(pathOrFile), resolve) : loadTextFile(pathOrFile, function (txt) {\n      return resolve(JSON.parse(txt));\n    });\n  }).then(function (fileContent) {\n    if (fileContent === null) {\n      throw new _errors.FileNotFoundError(pathOrFile);\n    }\n\n    return fileContent;\n  });\n}"]},"metadata":{},"sourceType":"script"}