{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reusables = require(\"../reusables\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar Stat = function () {\n  function Stat(df) {\n    _classCallCheck(this, Stat);\n\n    this.df = df;\n    this.name = \"stat\";\n  }\n\n  _createClass(Stat, [{\n    key: \"_castAsNumber\",\n    value: function _castAsNumber(columnName) {\n      return this.df.withColumn(columnName, function (row) {\n        return Number(row.get(columnName));\n      }).filter(function (row) {\n        return !Number.isNaN(row.get(columnName));\n      });\n    }\n  }, {\n    key: \"sum\",\n    value: function sum(columnName) {\n      return Number(this.df.reduce(function (p, n) {\n        return (0, _reusables.isNumber)(n.get(columnName)) ? p + Number(n.get(columnName)) : p;\n      }, 0));\n    }\n  }, {\n    key: \"max\",\n    value: function max(columnName) {\n      return this._castAsNumber(columnName).reduce(function (p, n) {\n        return n.get(columnName) > p.get(columnName) ? n : p;\n      }).get(columnName);\n    }\n  }, {\n    key: \"min\",\n    value: function min(columnName) {\n      return this._castAsNumber(columnName).reduce(function (p, n) {\n        return p.get(columnName) > n.get(columnName) ? n : p;\n      }).get(columnName);\n    }\n  }, {\n    key: \"mean\",\n    value: function mean(columnName) {\n      var numericDF = this.df.filter(function (row) {\n        return (0, _reusables.isNumber)(row.get(columnName));\n      });\n      return Number(numericDF.reduce(function (p, n) {\n        return (0, _reusables.isNumber)(n.get(columnName)) ? p + Number(n.get(columnName)) : p;\n      }, 0)) / numericDF.count();\n    }\n  }, {\n    key: \"average\",\n    value: function average(columnName) {\n      return this.mean(columnName);\n    }\n  }, {\n    key: \"var\",\n    value: function _var(columnName) {\n      var population = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var numericDF = this.df.filter(function (row) {\n        return (0, _reusables.isNumber)(row.get(columnName));\n      });\n      var mean = this.mean(columnName);\n      return Number(numericDF.reduce(function (p, n) {\n        return p + Math.pow(n.get(columnName) - mean, 2);\n      }, 0)) / (numericDF.count() - (population ? 0 : 1));\n    }\n  }, {\n    key: \"sd\",\n    value: function sd(columnName) {\n      var population = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return Math.sqrt(this.var(columnName, population));\n    }\n  }, {\n    key: \"stats\",\n    value: function stats(columnName) {\n      return {\n        sum: this.sum(columnName),\n        mean: this.mean(columnName),\n        min: this.min(columnName),\n        max: this.max(columnName),\n        var: this.var(columnName),\n        varpop: this.var(columnName, true),\n        sd: this.sd(columnName),\n        sdpop: this.sd(columnName, true)\n      };\n    }\n  }]);\n\n  return Stat;\n}();\n\nvar _default = Stat;\nexports.default = _default;","map":{"version":3,"sources":["/Users/gabe/mggg/estimate-incoming/node_modules/dataframe-js/lib/modules/stat.js"],"names":["Object","defineProperty","exports","value","default","_reusables","require","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","Stat","df","name","_castAsNumber","columnName","withColumn","row","Number","get","filter","isNaN","sum","reduce","p","n","isNumber","max","min","mean","numericDF","count","average","_var","population","arguments","undefined","Math","pow","sd","sqrt","var","stats","varpop","sdpop","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.reduce\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.number.constructor\");\n\nrequire(\"core-js/modules/es.number.is-nan\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reusables = require(\"../reusables\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Stat = function () {\n  function Stat(df) {\n    _classCallCheck(this, Stat);\n\n    this.df = df;\n    this.name = \"stat\";\n  }\n\n  _createClass(Stat, [{\n    key: \"_castAsNumber\",\n    value: function _castAsNumber(columnName) {\n      return this.df.withColumn(columnName, function (row) {\n        return Number(row.get(columnName));\n      }).filter(function (row) {\n        return !Number.isNaN(row.get(columnName));\n      });\n    }\n  }, {\n    key: \"sum\",\n    value: function sum(columnName) {\n      return Number(this.df.reduce(function (p, n) {\n        return (0, _reusables.isNumber)(n.get(columnName)) ? p + Number(n.get(columnName)) : p;\n      }, 0));\n    }\n  }, {\n    key: \"max\",\n    value: function max(columnName) {\n      return this._castAsNumber(columnName).reduce(function (p, n) {\n        return n.get(columnName) > p.get(columnName) ? n : p;\n      }).get(columnName);\n    }\n  }, {\n    key: \"min\",\n    value: function min(columnName) {\n      return this._castAsNumber(columnName).reduce(function (p, n) {\n        return p.get(columnName) > n.get(columnName) ? n : p;\n      }).get(columnName);\n    }\n  }, {\n    key: \"mean\",\n    value: function mean(columnName) {\n      var numericDF = this.df.filter(function (row) {\n        return (0, _reusables.isNumber)(row.get(columnName));\n      });\n      return Number(numericDF.reduce(function (p, n) {\n        return (0, _reusables.isNumber)(n.get(columnName)) ? p + Number(n.get(columnName)) : p;\n      }, 0)) / numericDF.count();\n    }\n  }, {\n    key: \"average\",\n    value: function average(columnName) {\n      return this.mean(columnName);\n    }\n  }, {\n    key: \"var\",\n    value: function _var(columnName) {\n      var population = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var numericDF = this.df.filter(function (row) {\n        return (0, _reusables.isNumber)(row.get(columnName));\n      });\n      var mean = this.mean(columnName);\n      return Number(numericDF.reduce(function (p, n) {\n        return p + Math.pow(n.get(columnName) - mean, 2);\n      }, 0)) / (numericDF.count() - (population ? 0 : 1));\n    }\n  }, {\n    key: \"sd\",\n    value: function sd(columnName) {\n      var population = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return Math.sqrt(this.var(columnName, population));\n    }\n  }, {\n    key: \"stats\",\n    value: function stats(columnName) {\n      return {\n        sum: this.sum(columnName),\n        mean: this.mean(columnName),\n        min: this.min(columnName),\n        max: this.max(columnName),\n        var: this.var(columnName),\n        varpop: this.var(columnName, true),\n        sd: this.sd(columnName),\n        sdpop: this.sd(columnName, true)\n      };\n    }\n  }]);\n\n  return Stat;\n}();\n\nvar _default = Stat;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}